<Window x:Class="SimpleCPUMiner.MainWindow"
        Title="{Binding MainWindowTitle}"
        x:Name="MyMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SimpleCPUMiner" 
        xmlns:conv="clr-namespace:SimpleCPUMiner.Converters"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Loaded="MyMainWindow_Loaded"
        Height="500" Width="880" WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" Visibility="{Binding WindowVisibility}" WindowState="{Binding WindowState}" ShowInTaskbar="{Binding ShowInTaskbar}" Icon="Resources/miner_logo_blue.png" >
    <Window.Resources>
        <conv:Bool2VisibilityConverter x:Key="Bool2VisibilityConverter" />
        <conv:CoinType2ImageSource x:Key="CoinType2ImageSource" />
        <conv:DeviceType2ImageSource x:Key="DeviceType2ImageSource" />
        <conv:Temperature2ImageSource x:Key="Temperature2ImageSource" />
        <conv:Number2Precentage x:Key="Number2Precentage" />
        <conv:Number2Temperature x:Key="Number2Temperature" />
        <conv:Speed2Hashrate x:Key="Speed2Hashrate" />
        <conv:NullableBool2VisibilityConverter x:Key="NullableBool2VisibilityConverter" />
        <conv:Index2NiceIndex x:Key="Index2NiceIndex" />
        <conv:Pool2NameConverter x:Key="Pool2NameConverter" />
        <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="DimGray" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DimGray" />
                                <Setter Property="Background" Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AlternatingListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#FFDDF1F7"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MyFocusVisualStyte" >
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30*" />
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="2*" />
                            </Grid.RowDefinitions>
                            <Border BorderThickness="2" BorderBrush="#38abcf" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="#d9d9d9"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#d9d9d9" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisualStyte}" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30*" />
                                <ColumnDefinition Width="30*" />
                                <ColumnDefinition Width="30*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30*" />
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="2*" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ShapeOn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="ShapeOff" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ShapeOff" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="ShapeOn" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border Grid.ColumnSpan="3" CornerRadius="6"
                            BorderThickness="2"
                            BorderBrush="{TemplateBinding Background}"
                            Background="{TemplateBinding Background}"/>
                            <Path x:Name="ShapeOff"
                              Grid.Column="0" Grid.ColumnSpan="2"
                              Data="M0,0 L60,0 30,30 0,30 z"
                              Stretch="Fill"
                              Fill="#626262" HorizontalAlignment="Left" />
                            <Path x:Name="ShapeOn" Grid.Column="1" Grid.ColumnSpan="2"
                              Data="M0,0 L30,0 30,30 -30,30 z" Stretch="Fill"
                              Fill="#38abcf" HorizontalAlignment="Right" />
                            <Border Name="BorderLeftDown"
                            Grid.Row="2" Grid.Column="0" CornerRadius="6"
                            Background="{TemplateBinding BorderBrush}"
                            Opacity="{Binding ElementName=ShapeOff, Path=Opacity}"/>
                            <Border Name="BorderRightDown"
                            Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" CornerRadius="6"
                            Background="{TemplateBinding BorderBrush}"
                            Opacity="{Binding ElementName=ShapeOn, Path=Opacity}"/>
                            <TextBlock Text="ON" Grid.Column="2"
                               Name="TextBlockOn"
                               FontWeight="Bold"
                               Foreground="{TemplateBinding Foreground}"
                               VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,5,0"
                               Opacity="{Binding ElementName=ShapeOn, Path=Opacity}"/>
                            <TextBlock Text="OFF" Grid.Column="0"
                               Name="TextBlockOff"
                               FontWeight="Bold"
                               Foreground="{TemplateBinding Foreground}"
                               VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,0,0,0"
                               Opacity="{Binding ElementName=ShapeOff, Path=Opacity}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#d9d9d9" />
                                <Setter TargetName="ShapeOn" Property="Fill" Value="#c2c2c2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundCorner" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="8" BorderBrush="#333333" BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                                </ContentPresenter>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush Color="LightGray" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF999999"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Settings" Visibility="Collapsed">
                <MenuItem Header="_Add to Defender exclusion"/>
            </MenuItem>
            <MenuItem Header="_About" Command="{Binding ShowAboutCommand}"/>
        </Menu>
        <Grid Name="MainGrid" OpacityMask="#FFB9F5F0">
            <Grid.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFD7DCF1" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="2*"></RowDefinition>
                <RowDefinition Height="4*"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
            </Grid.RowDefinitions>
            <Label Grid.Row="1" Content="{Binding Hash}" FontWeight="Bold" HorizontalAlignment="Right" />
            <ListView x:Name="lvDevices" Grid.Row="1" Grid.RowSpan="2" Margin="10,25,5,5" Padding="0" ItemsSource="{Binding Devices}" Background="Transparent">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="false"/>
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ContentPresenter Margin="0" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0">
                            <Image Width="32" Height="32" Source="{Binding ComputeDevice.Type, Converter={StaticResource ResourceKey=DeviceType2ImageSource}}" Stretch="Fill" ToolTip="{Binding ADLAdapterIndex, Converter={StaticResource Index2NiceIndex}}" HorizontalAlignment="Left" />
                            <Label Margin="40,0,0,0" Content="{Binding Name}" HorizontalAlignment="Left" />
                            <Label HorizontalAlignment="Right" FontWeight="Bold" FontSize="18" Content="{Binding Speed, Converter={StaticResource ResourceKey=Speed2Hashrate}}" ToolTip="Device hashrate" />
                            <Label HorizontalAlignment="Right" Margin="0,20,0,0" Content="{Binding Shares}" ToolTip="Shares accepted/total" />
                            <Image Margin="32,20,0,0" Width="28" Height="24" Source="{Binding Temperature, Mode=OneWay, Converter={StaticResource ResourceKey=Temperature2ImageSource}}" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Fill" HorizontalAlignment="Left" ToolTip="Temperature" />
                            <Label Margin="50,20,0,0" Content="{Binding Temperature, Converter={StaticResource ResourceKey=Number2Temperature}}" ToolTip="Temperature" HorizontalAlignment="Left" />
                            <Image Margin="90,20,0,0" Width="24" Height="24" Source="Resources/iconFan.png" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Fill" HorizontalAlignment="Left" ToolTip="Fan speed %" />
                            <Label Margin="115,20,0,0" Content="{Binding FanSpeed, Converter={StaticResource ResourceKey=Number2Precentage}}" ToolTip="Fan speed %" HorizontalAlignment="Left" />
                            <Image Margin="155,20,0,0" Width="24" Height="24" Source="Resources/iconUsage.png" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Fill" HorizontalAlignment="Left" ToolTip="Usage %" />
                            <Label Margin="180,20,0,0" Content="{Binding Activity, Converter={StaticResource ResourceKey=Number2Precentage}}" ToolTip="Usage %" HorizontalAlignment="Left" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <StackPanel Grid.Column="1"  Grid.Row="2">

                <WrapPanel Orientation="Horizontal">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1.1*" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="35" />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Label VerticalAlignment="Center" Grid.Row="2">Autostart mining</Label>
                        <ToggleButton x:Name="tbIsAutostartMining" TabIndex="6" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right" Style="{DynamicResource ToggleButtonStyle}" Width="80" VerticalAlignment="Center" IsChecked="{Binding IsAutoStartMining}"/>
                        <Border ToolTip="Delay in seconds" Grid.Column="2" Grid.Row="2" Background="#38abcf" Height="30" Visibility="{Binding ElementName=tbIsAutostartMining,Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}" >
                            <TextBox x:Name="tbStartingDelayInSec" TabIndex="7" HorizontalAlignment="Stretch" Margin="2" Style="{DynamicResource TextBoxStyle}" Height="22" MaxLength="5" TextWrapping="Wrap" Text="{Binding StartingDelayInSec}" PreviewTextInput="PortPrevTextInput" TextAlignment="Center" />
                        </Border>
                        <Label VerticalAlignment="Center" Grid.Row="1">Minimize to tray</Label>
                        <ToggleButton x:Name="checkBoxIsMinimizeToTray"  Grid.Column="1" Grid.Row="1" Style="{DynamicResource ToggleButtonStyle}" TabIndex="10" Width="80" HorizontalAlignment="Right" VerticalAlignment="Center" IsChecked="{Binding SelectedMinerSettings.IsMinimizeToTray}"/>
                        <Label VerticalAlignment="Center" >Launch on startup</Label>
                        <ToggleButton x:Name="tbIsStartsWithWindows" Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource ToggleButtonStyle}" Width="80" Command="{Binding LaunchOnWindowsStartup, Mode=OneWay}" TabIndex="8" VerticalAlignment="Center" IsChecked="{Binding SelectedMinerSettings.IsLaunchOnWindowsStartup}" Margin="0,3"/>
                        <Button x:Name="btnStartMining" Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" Background="Transparent" Style="{DynamicResource RoundCorner}" ToolTip="Start mining" TabIndex="12" Margin="5" Command="{Binding startMiningCommand , Mode=OneWay}" FontSize="13" FontWeight="Bold" FontFamily="Sagoe UI"  Width="64" Height="64" VerticalAlignment="Top">
                            <Grid>
                                <Image Source="Resources/circleIcon.png" RenderOptions.BitmapScalingMode="HighQuality" />
                                <TextBlock Text="{Binding StartMiningButtonContent}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="#555555" />
                            </Grid>
                        </Button>
                        <Button x:Name="btnExit" Grid.Column="4" Grid.Row="1" Grid.RowSpan="2" Margin="5" ToolTip="Exit" Style="{DynamicResource RoundCorner}" Background="Transparent" TabIndex="13" Command="{Binding CloseWindowCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=MyMainWindow}" Width="64" Height="64" Padding="0" VerticalAlignment="Top">
                            <Grid>
                                <Image Source="Resources/iconExit.png" RenderOptions.BitmapScalingMode="HighQuality" />
                            </Grid>
                        </Button>
                    </Grid>

                </WrapPanel>
            </StackPanel>
            <WebBrowser x:Name="wbContent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0,5,0" Navigating="wbContent_Navigating" />
            <TabControl x:Name="tcMaintabs" Grid.Column="1" Grid.RowSpan="2" SelectedItem ="{Binding MainTabControl}" SelectedIndex="{Binding MainTabControlId}" >
                <TabItem Header="Pool" TabIndex="1">
                    <Grid Background="#FFE5E5E5" >
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="10*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        
                        <Grid Grid.Row="1" Margin="5,0,0,0" HorizontalAlignment="Left">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Background="#eeeeee">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45" SharedSizeGroup="poolIcon"/>
                                    <ColumnDefinition Width="30" />
                                    <ColumnDefinition Width="240" />
                                    <ColumnDefinition Width="45"/>
                                    <ColumnDefinition Width="55" />
                                </Grid.ColumnDefinitions>
                                <Label Content="Icon" HorizontalAlignment="Center" />
                                <Label Grid.Column="1" />
                                <Label Content="Name" Grid.Column="2" />
                                <Label Content="Port" Grid.Column="3" />
                                <Label Content="Order" Grid.Column="4" HorizontalAlignment="Center" />
                            </Grid>
                        </Grid>
                        
                        <ListView x:Name="lvPools" Grid.Row="2" Margin="5,0,5,5" ItemsSource="{Binding Pools}" SelectedItem="{Binding SelectedPool}" SelectedIndex="{Binding SelectedPoolIndex}" TabIndex="5" ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.InputBindings>
                                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Path=DataContext.PoolModifyCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                                        </Grid.InputBindings>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="45"/>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="230" />
                                            <ColumnDefinition Width="45"/>
                                            <ColumnDefinition Width="50" />
                                        </Grid.ColumnDefinitions>
                                        <Image Stretch="Fill" Width="24px" Height="24px" Source="{Binding CoinType, Converter={StaticResource CoinType2ImageSource}}" RenderOptions.BitmapScalingMode="HighQuality" />
                                        <TextBlock Text="[M]" VerticalAlignment="Center" TextAlignment="Right" Margin="0,0,4,0" HorizontalAlignment="Stretch" Visibility="{Binding IsMain, Converter={StaticResource Bool2VisibilityConverter}}" Grid.Column="1" Padding="0" />
                                        <TextBlock Text="[F]" VerticalAlignment="Center" TextAlignment="Right" Margin="0,0,4,0" HorizontalAlignment="Stretch" Visibility="{Binding IsFailOver, Converter={StaticResource Bool2VisibilityConverter}}" Grid.Column="1" Padding="0" />
                                        <Label Content="{Binding Converter={StaticResource Pool2NameConverter}}" VerticalAlignment="Center" Grid.Column="2" Padding="0" />
                                        <Label Content="{Binding Port}" VerticalAlignment="Center" Grid.Column="3" Padding="0" />
                                        <TextBlock Text="{Binding FailOverPriority}" VerticalAlignment="Center" Grid.Column="4" Visibility="{Binding IsFailOver, Converter={StaticResource Bool2VisibilityConverter}}" TextAlignment="Center" HorizontalAlignment="Stretch" Padding="0" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">
                            <Button Margin="5" Width="90" HorizontalContentAlignment="Left" Style="{DynamicResource RoundCorner}" Height="28px" Command="{Binding PoolAddCommand}" TabIndex="2" >
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="Resources/iconAdd.png" Stretch="Fill" Margin="5,3,0,3" />
                                    <Label Content="Add new" TabIndex="2" />
                                </StackPanel>
                            </Button>
                            <Button Margin="5" Width="90" HorizontalContentAlignment="Left" Style="{DynamicResource RoundCorner}" Height="28px" Command="{Binding PoolModifyCommand}" TabIndex="3" >
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="Resources/iconEdit.png" Stretch="Fill" Margin="5,3,0,3" />
                                    <Label Content="Modify" TabIndex="3" />
                                </StackPanel>
                            </Button>
                            <Button Margin="5" Width="90" HorizontalContentAlignment="Left" Style="{DynamicResource RoundCorner}" Height="28px" Command="{Binding PoolRemoveCommand}" TabIndex="4">
                                <StackPanel Orientation="Horizontal" >
                                    <Image Source="Resources/iconRemove.png"  Stretch="Fill" Margin="5,3,0,3" />
                                    <Label Content="Remove" TabIndex="4" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="CPU">
                    <Grid Background="#FFE5E5E5" IsEnabled="{Binding IsIdle}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="194*"/>
                            <ColumnDefinition Width="215*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label VerticalAlignment="Center">Enable CPU mining</Label>
                        <ToggleButton Grid.Column="1" Style="{DynamicResource ToggleButtonStyle}" IsChecked="{Binding SelectedMinerSettings.IsCPUMiningEnabled}" IsEnabled="{Binding IsIdle}" VerticalAlignment="Center" Height="30" Width="80" HorizontalAlignment="Left" />
                        <Label x:Name="labelThreads" Grid.Row="1" Content="Number of CPU threads (0 = auto)" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.ColumnSpan="3" Margin="0" />
                        <TextBox x:Name="tbThreads" TabIndex="5" Grid.Row="1" Grid.Column="3" Style="{DynamicResource TextBoxStyle}" HorizontalAlignment="Left" Height="23" MaxLength="2" IsEnabled="{Binding IsIdle}" TextWrapping="Wrap" Text="{Binding ThreadNumber, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Width="48" TextAlignment="Center" Margin="0" />
                        <Label x:Name="labelMaxCPUUsage" Grid.Row="2" Grid.ColumnSpan="3" Content="Maximum CPU usage" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0"/>
                        <Slider x:Name="sliderMaxCPUUsage" Grid.Row="2" Grid.ColumnSpan="2" Margin="130,0,40,0" TabIndex="6" HorizontalAlignment="Stretch"  VerticalAlignment="Center" IsEnabled="{Binding IsEnabledCPUThreadAuto}" Minimum="1" Maximum="100" Value="{Binding SelectedMinerSettings.MaxCPUUsage}" TickFrequency="1" IsSnapToTickEnabled="True" Grid.Column="0"/>
                        <TextBox x:Name="tbSlideValue" Grid.Row="2" Margin="0,0,5.2,0" Grid.Column="1" Style="{DynamicResource TextBoxStyle}" TabIndex="7" HorizontalAlignment="Right" Height="23" MaxLength="4" IsEnabled="{Binding IsEnabledCPUThreadAuto}" TextWrapping="Wrap" Text="{Binding ElementName=sliderMaxCPUUsage, Path=Value, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" VerticalAlignment="Center" Width="32" />
                        <Label x:Name="labelCpuAffinity" Grid.Row="3" Content="CPU Affinity:" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.ColumnSpan="3" Margin="0"/>
                        <TextBox x:Name="tbCpuAffinity" Grid.Row="3" Margin="76,0,0,0" HorizontalAlignment="Left" Style="{DynamicResource TextBoxStyle}" TabIndex="8" Height="23" TextWrapping="Wrap" IsEnabled="{Binding IsIdle}" VerticalAlignment="Center" Text="{Binding SelectedMinerSettings.CPUAffinity}" Width="120" Grid.Column="0"/>
                        <Button x:Name="btnCpuAffinity" Grid.Row="3" Grid.Column="1" Height="24" Width="24" HorizontalAlignment="Left" IsEnabled="{Binding IsIdle}" TabIndex="9" Command="{Binding CpuAffinityCommand}" CommandParameter="{Binding SelectedMinerSettings.NumberOfThreads}" Margin="0">
                            <Grid>
                                <Image HorizontalAlignment="Left" Stretch="Fill" Source="Resources/iconCog.png"/>
                            </Grid>
                        </Button>
                    </Grid>
                </TabItem>
                <TabItem Header="GPU">
                    <Grid Background="#FFE5E5E5" IsEnabled="{Binding IsIdle}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        
                        <Grid HorizontalAlignment="Left" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Background="#eeeeee">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="18"/>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="200" />
                                    <ColumnDefinition Width="60" />
                                    <ColumnDefinition Width="55"/>
                                    <ColumnDefinition Width="65" />
                                </Grid.ColumnDefinitions>
                                <Label Content="Active" HorizontalAlignment="Center" Grid.ColumnSpan="2" />
                                <Label Content="Name" Margin="5px 0px 0px 0px" Grid.Column="2" />
                                <Label Content="Worksize" Grid.Column="3" />
                                <Label Content="Intensity" Grid.Column="4" />
                                <Label Content="Threads" Grid.Column="5" HorizontalAlignment="Center" />
                            </Grid>
                        </Grid>

                        <ListView x:Name="lwGPUDevices" Grid.Row="1" ItemsSource="{Binding OpenCLDevices}" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid IsEnabled="{Binding IsUseable}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="18"/>
                                            <ColumnDefinition Width="25"/>
                                            <ColumnDefinition Width="200" /> 
                                            <ColumnDefinition Width="55" />
                                            <ColumnDefinition Width="50"/>
                                            <ColumnDefinition Width="50" />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox IsChecked="{Binding IsEnabled}" VerticalAlignment="Center" />
                                        <Label Content="{Binding ADLAdapterIndex, Converter={StaticResource Index2NiceIndex}}" VerticalAlignment="Center" Padding="0" Grid.Column="1" />
                                        <Label Content="{Binding Name}" VerticalAlignment="Center" Grid.Column="2" Padding="0" />
                                        <TextBox Text="{Binding WorkSize}" VerticalAlignment="Center" HorizontalContentAlignment="Center" PreviewTextInput="PortPrevTextInput" Grid.Column="3" />
                                        <TextBox Text="{Binding Intensity}" VerticalAlignment="Center" HorizontalContentAlignment="Center" PreviewTextInput="PortPrevTextInput" Grid.Column="4" />
                                        <TextBox Text="{Binding Threads}" VerticalAlignment="Center" HorizontalContentAlignment="Center" PreviewTextInput="PortPrevTextInput" Grid.Column="5" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </TabItem>
                <TabItem x:Name="tabOptimization" Header="Optimization" Visibility="Visible">
                    <Grid Background="#FFE5E5E5" IsEnabled="{Binding IsIdle}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*"/>
                            <ColumnDefinition Width="1"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <ListView x:Name="lvOptimizations" Grid.Row="2" Margin="5,0,5,5" ItemsSource="{Binding OptList}" SelectedIndex="{Binding SelectedOptIndex}" TabIndex="5" ScrollViewer.HorizontalScrollBarVisibility="Hidden" >
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="10*"/>
                                            <ColumnDefinition Width="90"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Content="{Binding Name}" VerticalAlignment="Center" Grid.Column="0" Padding="0" Width="310"/>
                                        <ToggleButton x:Name="toggleIsOn" Visibility="{Binding IsOn, Converter={StaticResource NullableBool2VisibilityConverter}}" Command="{Binding ApplyCommand}" Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource ToggleButtonStyle}" Width="80" TabIndex="8" VerticalAlignment="Center" IsChecked="{Binding IsOn}"/>
                                        <Label x:Name="lblNotSupported" Content="N/A" Visibility="{Binding IsNull, Converter={StaticResource Bool2VisibilityConverter}}" Grid.Column="1" HorizontalAlignment="Right" Width="80" TabIndex="8" VerticalAlignment="Center" />
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Label Grid.RowSpan="2" Grid.ColumnSpan="3" x:Name="lbNeedAdminPrivilege" Content="Need Administrator privilege!" Visibility="{Binding IsVisibleAdminLabel}" Foreground="Red" FontWeight="Bold" Background="AliceBlue" FontSize="18" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                        <StackPanel Orientation="Vertical" Grid.Column="1">
                            <Button x:Name="btnProcesses" Style="{DynamicResource RoundCorner}" Visibility="Collapsed" Content="Processes" IsEnabled="{Binding IsAdministrator}" Height="28px" HorizontalAlignment="Stretch" Margin="5,10,5,0" />
                            <Button x:Name="btnBuiltInApps" Style="{DynamicResource RoundCorner}" Visibility="Collapsed" Content="Built-in apps" IsEnabled="{Binding IsAdministrator}" Height="28px" HorizontalAlignment="Stretch" Margin="5,10,5,0" />
                            <Button x:Name="btnScheduledTasks" Style="{DynamicResource RoundCorner}" Visibility="Collapsed" Content="Sched. tasks" IsEnabled="{Binding IsAdministrator}" Height="28px" HorizontalAlignment="Stretch" Margin="5,10,5,0" />
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Log">
                    <Grid Background="#FFE5E5E5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label x:Name="labelOutput" Content="Miner output" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        <CheckBox x:Name="checkBoxIsLogging" Margin="0,3,7,0" Content="Log to file" HorizontalAlignment="Right"  VerticalAlignment="Top" IsChecked="{Binding SelectedMinerSettings.IsLogging}"/>
                        <ListView x:Name="listViewOutputString" Margin="5,21,5,4" ItemsSource="{Binding MinerOutputString}" ScrollViewer.ScrollChanged="ScrollViewer_ScrollChanged" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ItemContainerStyle="{StaticResource AlternatingListViewItemStyle}" AlternationCount="2" >
                            <ListView.CommandBindings>
                                <CommandBinding Command="ApplicationCommands.Copy" Executed="CtrlCCopyCmdExecuted" />
                            </ListView.CommandBindings>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" TextWrapping="Wrap" Width="390">
                                        <TextBlock.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Command="Copy">
                                                    <MenuItem.CommandBindings>
                                                        <CommandBinding Command="ApplicationCommands.Copy" Executed="RightClickCopyCmdExecuted" />
                                                    </MenuItem.CommandBindings>
                                                </MenuItem>
                                            </ContextMenu>
                                        </TextBlock.ContextMenu>
                                    </TextBlock>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </DockPanel>
</Window>
